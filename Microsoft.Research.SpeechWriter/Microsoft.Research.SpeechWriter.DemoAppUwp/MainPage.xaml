<Page
    x:Class="Microsoft.Research.SpeechWriter.DemoAppUwp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Research.SpeechWriter.DemoAppUwp"
    xmlns:coreui="using:Microsoft.Research.SpeechWriter.Core.UI.Uwp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:lib="using:Microsoft.Research.SpeechWriter.Core.Items"
    xmlns:gaze="using:Microsoft.Toolkit.Uwp.Input.GazeInteraction"
    mc:Ignorable="d"
    gaze:GazeInput.Interaction="Enabled"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>

        <local:TemplateTypeConverter x:Name="TemplateConverter"/>
        <local:TemplateOpacityCoverter x:Key="TemplateOpacityConverter"/>
        <local:StringFormatter x:Key="StringFomatter"/>

        <Style TargetType="Button">
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="ItemsControl">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Button Content="{Binding}" Command="{Binding}" ContentTemplate="{Binding Converter={StaticResource TemplateConverter}}" Opacity="{Binding Converter={StaticResource TemplateOpacityConverter}}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CommandItem" x:DataType="lib:CommandItem">
            <TextBlock Text="{Binding FormattedContent}" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedWordItem" x:DataType="lib:SuggestedWordItem">
            <coreui:TileControl Background="LightYellow" Caption="{Binding FormattedContent}" IsPrefix="{Binding Tile.IsPrefix}" IsSuffix="{Binding Tile.IsSuffix}"/>
        </DataTemplate>
        <DataTemplate x:Key="HeadWordItem" x:DataType="lib:HeadWordItem">
            <coreui:TileControl Background="LightGreen" Caption="{Binding FormattedContent}" IsPrefix="{Binding Tile.IsPrefix}" IsSuffix="{Binding Tile.IsSuffix}"/>
        </DataTemplate>
        <DataTemplate x:Key="ReplacementItem" x:DataType="lib:ReplacementItem">
            <StackPanel Orientation="Horizontal">
                <coreui:TileControl Background="LightGreen" Caption="{Binding OldUnformattedContent}" IsPrefix="{Binding OldIsAttachedToNext}" IsSuffix="{Binding OldIsAttachedToPrevious}"/>
                <TextBlock Text="&#x2192;" FontSize="25" FontWeight="Bold" Foreground="DarkGray" VerticalAlignment="Center"/>
                <coreui:TileControl Background="LightGreen" Caption="{Binding UnformattedContent}" IsPrefix="{Binding IsAttachedToNext}" IsSuffix="{Binding IsAttachedToPrevious}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="GhostWordItem" x:DataType="lib:GhostWordItem">
            <coreui:TileControl Background="LightBlue" Caption="{Binding FormattedContent}" IsPrefix="{Binding Tile.IsPrefix}" IsSuffix="{Binding Tile.IsSuffix}"/>
        </DataTemplate>
        <DataTemplate x:Key="InterstitialNonItem" x:DataType="lib:InterstitialNonItem">
            <TextBlock Text="-" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="InterstitialGapItem" x:DataType="lib:InterstitialGapItem">
            <TextBlock Text=":" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="InterstitialSpellingItem" x:DataType="lib:InterstitialSpellingItem">
            <TextBlock Text="*" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="HeadStartItem" x:DataType="lib:HeadStartItem">
            <TextBlock Text="&#xAB;" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="TailStopItem" x:DataType="lib:TailStopItem">
            <TextBlock Text="&#xBB;" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="GhostStopItem" x:DataType="lib:GhostStopItem">
            <TextBlock Text="&#xBB;" FontSize="25" FontWeight="Bold" Margin="5"/>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedSpellingItem" x:DataType="lib:SuggestedSpellingItem">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Prefix}" FontSize="25" FontWeight="Bold" Foreground="DarkGray" VerticalAlignment="Center"/>
                <Border BorderBrush="Black" BorderThickness="1" Background="LightSteelBlue" Margin="5,2">
                    <TextBlock Text="{Binding Symbol}" FontSize="25" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
                </Border>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedSpellingSequenceItem" x:DataType="lib:SuggestedSpellingSequenceItem">
            <Border BorderBrush="Black" BorderThickness="1" Background="LightSteelBlue" Margin="5,2">
                <TextBlock Text="{Binding Symbol}" FontSize="25" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedSpellingWordItem" x:DataType="lib:SuggestedSpellingWordItem">
            <Border BorderBrush="Black" BorderThickness="1" Background="LightYellow" Margin="5,2">
                <TextBlock Text="{Binding FormattedContent}" FontSize="25" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedSpellingBackspaceItem" x:DataType="lib:SuggestedSpellingBackspaceItem">
            <TextBlock Text="{Binding Prefix}" FontSize="25" FontWeight="Bold" Foreground="DarkGray" VerticalAlignment="Center"/>
        </DataTemplate>
        <DataTemplate x:Key="InterstitialUnicodeItem" x:DataType="lib:InterstitialUnicodeItem">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="&#xE775;" FontSize="25" FontFamily="Segoe MDL2 Assets" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="SuggestedUnicodeItem" x:DataType="lib:SuggestedUnicodeItem">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Prefix}" FontSize="25" FontWeight="Bold" Foreground="DarkGray" VerticalAlignment="Center"/>
                <Border BorderBrush="Black" BorderThickness="1" Background="LightSteelBlue" Margin="5,2">
                    <TextBlock Text="{Binding Symbol}" FontSize="25" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
                </Border>
                <TextBlock Text="{Binding Code, Converter={StaticResource StringFomatter}, ConverterParameter='&amp;#{0};'}" FontSize="25" FontWeight="Bold" Margin="7,0" Foreground="Black"/>
            </StackPanel>
        </DataTemplate>

        <Storyboard x:Name="MoveRectangle">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToX, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSettleTime, Mode=OneWay}" Value="{x:Bind MoveToCenterX, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToY, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSettleTime, Mode=OneWay}" Value="{x:Bind MoveToCenterY, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToHeight, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToWidth, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Name="TutorMoveStoryboard">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToX, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToY, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToHeight, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" EnableDependentAnimation="True" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                <EasingDoubleKeyFrame KeyTime="{x:Bind MoveRectangeSeekTime, Mode=OneWay}" Value="{x:Bind MoveToWidth, Mode=OneWay}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <CommandBar Margin="-10000,-10000,0,0">
            <CommandBar.KeyboardAccelerators>
                <KeyboardAccelerator Key="F5" Invoked="OnRestart"/>
                <KeyboardAccelerator Key="X" Invoked="OnClickKirk"/>
                <KeyboardAccelerator Key="C" Invoked="OnClickPicard"/>
                <KeyboardAccelerator Key="V" Invoked="OnPaste"/>
                <KeyboardAccelerator Key="T" Invoked="OnClickTutor"/>
                <KeyboardAccelerator Key="Q" Invoked="OnClickQuick"/>
                <KeyboardAccelerator Key="R" Invoked="OnClickReset"/>
                <KeyboardAccelerator Key="Space" Invoked="OnSpace"/>
                <KeyboardAccelerator Key="S" Invoked="OnTimingChange"/>
                <KeyboardAccelerator Key="L" Invoked="OnShowLogging"/>
                <KeyboardAccelerator Key="P" Invoked="OnShowTestCard"/>
                <KeyboardAccelerator Key="NumberPad1" Invoked="OnFrench"/>
                <KeyboardAccelerator Key="NumberPad2" Invoked="OnSpanish"/>
                <KeyboardAccelerator Key="NumberPad3" Invoked="OnGerman"/>
                <KeyboardAccelerator Key="NumberPad4" Invoked="OnThai"/>
                <KeyboardAccelerator Key="NumberPad5" Invoked="OnPortuguese"/>
                <KeyboardAccelerator Key="NumberPad6" Invoked="OnItalian"/>
                <KeyboardAccelerator Key="NumberPad7" Invoked="OnArabic"/>
                <KeyboardAccelerator Key="NumberPad8" Invoked="OnChinese"/>
                <KeyboardAccelerator Key="Number1" Invoked="OnFrench"/>
                <KeyboardAccelerator Key="Number2" Invoked="OnSpanish"/>
                <KeyboardAccelerator Key="Number3" Invoked="OnGerman"/>
                <KeyboardAccelerator Key="Number4" Invoked="OnThai"/>
                <KeyboardAccelerator Key="Number5" Invoked="OnPortuguese"/>
                <KeyboardAccelerator Key="Number6" Invoked="OnItalian"/>
                <KeyboardAccelerator Key="Number7" Invoked="OnArabic"/>
                <KeyboardAccelerator Key="Number8" Invoked="OnChinese"/>
            </CommandBar.KeyboardAccelerators>
        </CommandBar>

        <MediaElement x:Name="TheMediaElement"/>

        <ItemsControl x:Name="HeadItemsContainer" Grid.Column="0" Grid.Row="0" ItemsSource="{x:Bind Model.HeadItems, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ItemsControl x:Name="TailItemsContainer" Grid.Column="0" Grid.Row="1" ItemsSource="{x:Bind Model.TailItems, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:WrapPanel HorizontalAlignment="Right"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ItemsControl x:Name="SuggestionInterstitialsContainer" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" ItemsSource="{x:Bind Model.SuggestionInterstitials, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ItemsControl x:Name="SuggestionListsContainer" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" ItemsSource="{x:Bind Model.SuggestionLists, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" Margin="0,55,0,0"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Canvas x:Name="TargetPanel">
            <Rectangle x:Name="TargetOutline" Stroke="LimeGreen" StrokeThickness="3" Fill="Transparent" IsHitTestVisible="False" Visibility="Collapsed"/>
        </Canvas>

        <Canvas x:Name="SwitchPanel"/>

    </Grid>
</Page>
