<Page x:Class="Microsoft.Research.SpeechWriter.Apps.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:Microsoft.Research.SpeechWriter.UI.Wpf;assembly=Microsoft.Research.SpeechWriter.UI.Wpf"
        mc:Ignorable="d"
        PreviewKeyDown="OnPreviewKeyDown"
        WindowTitle="SpeechWriter DemoApp WPF">

    <Page.Resources>
        <ResourceDictionary>

            <Storyboard x:Key="MoveRectangle">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="{Binding MoveToCenterX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="{Binding MoveToCenterY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToHeight, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToWidth, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="TutorMoveStoryboard">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToHeight, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToWidth, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="Transparent">
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.SpeakWordByWord}" Header="Speak words as they are selected"/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.SpeakWholeUtterances}" Header="Speak utterances as they are completed"/>
                <Separator/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.FindFollowOnPredictions}" Header="Find follow-on words"/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.CombineCorePredictions, Mode=TwoWay}" Header="Combine adjacent top-ranked predictions"/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.FindCorePredictionPrefixes}" Header="Consider possible prediction prefixes"/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.FindCorePredictionSuffixes}" Header="Consider possible prediction suffixes"/>
                <Separator/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.ShowSpellingInterstitials}" Header="Show spelling buttons between adjacent known words"/>
                <MenuItem IsCheckable="True" IsChecked="{Binding Settings.ShowUnicodeInterstitials}" Header="Show Unicode buttons between non-adjacent symbols"/>
            </ContextMenu>
        </Grid.ContextMenu>
        <ui:SuperPanel x:Name="TheHost" VerticalAlignment="Center"/>
        <Canvas x:Name="TargetPanel">
            <Rectangle x:Name="TargetOutline" Stroke="LimeGreen" StrokeThickness="3" Fill="Transparent" IsHitTestVisible="False" Visibility="Collapsed"/>
        </Canvas>
    </Grid>
</Page>
