<Page x:Class="Microsoft.Research.SpeechWriter.Apps.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:coreui="clr-namespace:Microsoft.Research.SpeechWriter.UI.Wpf;assembly=Microsoft.Research.SpeechWriter.UI.Wpf"
        mc:Ignorable="d"
        PreviewKeyDown="OnPreviewKeyDown"
        WindowTitle="SpeechWriter DemoApp WPF">

    <Page.Resources>
        <ResourceDictionary>

            <Style TargetType="ItemsControl">
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <coreui:TileButton Item="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="MoveRectangle">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="{Binding MoveToCenterX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="{Binding MoveToCenterY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToHeight, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToWidth, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSettleTime, Mode=OneWay}" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="TutorMoveStoryboard">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Left)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToX, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Canvas.Top)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToY, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Height)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToHeight, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.00" Storyboard.TargetName="TargetOutline" Storyboard.TargetProperty="(Width)">
                    <EasingDoubleKeyFrame KeyTime="{Binding MoveRectangeSeekTime, Mode=OneWay}" Value="{Binding MoveToWidth, Mode=OneWay}">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <coreui:ButtonSurfaceUI Grid.Column="0" x:Name="TheHost"/>
        <Grid Grid.Column="1" x:Name="TheContent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ItemsControl x:Name="HeadItemsContainer" Grid.Column="0" Grid.Row="0" ItemsSource="{Binding HeadItems}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <ItemsControl x:Name="TailItemsContainer" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding TailItems}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Right"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <ItemsControl x:Name="SuggestionInterstitialsContainer" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" ItemsSource="{Binding SuggestionInterstitials}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <ItemsControl x:Name="SuggestionListsContainer" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" ItemsSource="{Binding SuggestionLists}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" Margin="0,30,0,0"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Canvas x:Name="TargetPanel">
                <Rectangle x:Name="TargetOutline" Stroke="LimeGreen" StrokeThickness="3" Fill="Transparent" IsHitTestVisible="False" Visibility="Collapsed"/>
            </Canvas>

        </Grid>
    </Grid>
</Page>
